#!/bin/bash
# Generate a recursive archive to test with
# ./generate will generate a recursive archive
# ./generate --include-targets will add a package.json and a pom.xml to the archives
# ./generate --skip-archiving will just create the directory structure, but skip the archiving

WORKING_DIR=`pwd`
echo "WORKING_DIR = $WORKING_DIR"

include_targets="false"
skip_archiving="false"
while [[ $# -gt 0 ]]; do
  case $1 in
    --include-targets)
      include_targets="true"
      shift # past value
      ;;
    --skip-archiving)
      skip_archiving="true"
      shift # past value
      ;;
    *)
      shift # past argument
      ;;
  esac
done

# Make the files
rm -rf recursive-archive
mkdir -p recursive-archive/vendor/foo/bar/baz/quux
cp MIT_LICENSE recursive-archive/vendor/foo/bar/baz/quux/QUUX_LICENSE
cp MIT_LICENSE recursive-archive/vendor/foo/bar/baz/SOMETHING_LICENSE
cp apache_licensed_codefile.rb recursive-archive/vendor/foo/bar/baz/something.rb
cp apache_licensed_codefile.rb recursive-archive/vendor/foo/bar/bar_apache.rb
cp MIT_LICENSE recursive-archive/vendor/foo/bar

if [[ "$include_targets" == "true" ]]; then
  cp package.json recursive-archive/vendor/foo/bar/baz/quux
  cp yarn.lock recursive-archive/vendor/foo/bar/baz/quux
  cp pom.xml recursive-archive/vendor/foo/bar/
fi

# The UUID gives us a different directory hash every time we generate
uuidgen > recursive-archive/vendor/foo/VERSION

if [[ "$skip_archiving" == "true" ]]; then
  echo "Exiting early"
  exit 0
fi

# output the file-tree before tarring things up
echo "un-archived directory structure: "
tree recursive-archive

# create the foo/bar/baz/quux.tar.gz archive
cd recursive-archive/vendor/foo/bar/baz
tar zcf quux.tar.gz quux
rm -rf quux
cd $WORKING_DIR
echo "after creating foo/bar/baz/quux.tar.gz"
tree recursive-archive

# create foo/bar/baz.tar.gz archive
cd recursive-archive/vendor/foo/bar
tar zcf baz.tar.gz baz
rm -rf baz
cd $WORKING_DIR
echo "after creating foo/bar/baz.tar.gz"
tree recursive-archive

# create foo/bar.tar.gz archive
cd recursive-archive/vendor/foo
tar zcf bar.tar.gz bar
rm -rf bar
cd $WORKING_DIR
echo "after creating foo/bar.tar.gz"
tree recursive-archive

# create foo.tar.gz archive
cd recursive-archive/vendor
tar zcf foo.tar.gz foo
rm -rf foo
cd $WORKING_DIR

# copy in fossa-deps.yml
cp fossa-deps.yml recursive-archive

echo
echo "post-archiving directory structure: "
tree recursive-archive
